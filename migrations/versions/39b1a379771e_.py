"""empty message

Revision ID: 39b1a379771e
Revises: d7203194ea78
Create Date: 2024-10-29 16:28:15.642415

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '39b1a379771e'
down_revision = 'd7203194ea78'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dl_wo_staging', schema=None) as batch_op:
        batch_op.alter_column('wo_start',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('wo_finish',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('wo_start_olah',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('wo_finish_olah',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('reportdate',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('reportdate_olah',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('actstart',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('actfinish',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('actstart_olah',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.alter_column('actfinish_olah',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Text(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dl_wo_staging', schema=None) as batch_op:
        batch_op.alter_column('actfinish_olah',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('actstart_olah',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('actfinish',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('actstart',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('reportdate_olah',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('reportdate',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('wo_finish_olah',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('wo_start_olah',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('wo_finish',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('wo_start',
               existing_type=sa.Text(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    # ### end Alembic commands ###
