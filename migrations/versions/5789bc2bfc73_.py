"""empty message

Revision ID: 5789bc2bfc73
Revises: 75a51adfe70b
Create Date: 2024-10-02 13:09:43.086275

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "5789bc2bfc73"
down_revision = "75a51adfe70b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("hl_tr_data_detail_root_cause")
    op.drop_table("auth_mr_user")
    op.drop_table("auth_tr_role_resource")
    op.drop_table("auth_mr_resource")
    op.drop_table("hl_tr_data_detail")
    op.drop_table("hl_ms_excel_variables_header")
    op.drop_table("hl_ms_excel_variables_cause")
    op.drop_table("hl_ms_excel_variables")
    op.drop_table("hl_tr_data")
    op.drop_table("auth_mr_role")
    op.drop_table("hl_ms_thermoflow_status")
    op.drop_table("hl_ms_excel")
    op.drop_table("hl_ms_masterdata")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "hl_ms_masterdata",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("kode", sa.VARCHAR(length=300), autoincrement=False, nullable=True),
        sa.Column("seq", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("group_id", sa.VARCHAR(length=300), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="hl_ms_masterdata_pkey"),
        sa.UniqueConstraint("name", name="hl_ms_masterdata_name_key"),
    )
    op.create_table(
        "hl_ms_excel_variables_cause",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "parent_id",
            sa.UUID(),
            autoincrement=False,
            nullable=True,
            comment="ref to id table ini sendiri (recursive)",
        ),
        sa.Column("variable_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["hl_ms_excel_variables_cause.id"],
            name="hl_ms_excel_variables_cause_parent_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["variable_id"],
            ["hl_ms_excel_variables.id"],
            name="hl_ms_excel_variables_cause_variable_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="hl_ms_excel_variables_cause_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "hl_tr_data_detail",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("variable_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("efficiency_transaction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("nilai", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column("nilai_string", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "persen_hr", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False
        ),
        sa.Column(
            "deviasi", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False
        ),
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["efficiency_transaction_id"],
            ["hl_tr_data.id"],
            name="hl_tr_data_detail_efficiency_transaction_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["variable_id"],
            ["hl_ms_excel_variables.id"],
            name="hl_tr_data_detail_variable_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="hl_tr_data_detail_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "hl_ms_excel",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("excel_filename", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(length=300), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="hl_ms_excel_pkey"),
        sa.UniqueConstraint("excel_filename", name="hl_ms_excel_excel_filename_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "hl_ms_thermoflow_status",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_running", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="hl_ms_thermoflow_status_pkey"),
    )
    op.create_table(
        "auth_mr_role",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="auth_mr_role_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "hl_ms_excel_variables_header",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("variable_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["variable_id"],
            ["hl_ms_excel_variables.id"],
            name="hl_ms_excel_variables_header_variable_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="hl_ms_excel_variables_header_pkey"),
    )
    op.create_table(
        "hl_tr_data",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("periode", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("jenis_parameter", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("excel_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("sequence", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("persen_threshold", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("performance_test_weight", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_performance_test", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("unique_id", sa.VARCHAR(length=300), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["excel_id"], ["hl_ms_excel.id"], name="hl_tr_data_excel_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="hl_tr_data_pkey"),
        sa.UniqueConstraint("unique_id", name="hl_tr_data_unique_id_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "hl_ms_excel_variables",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("excel_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("category", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("input_name", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column(
            "excel_variable_name", sa.VARCHAR(length=500), autoincrement=False, nullable=True
        ),
        sa.Column("satuan", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("in_out", sa.VARCHAR(length=25), autoincrement=False, nullable=True),
        sa.Column("is_pareto", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_faktor_koreksi", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_nilai_losses", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("is_nphr", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_over_haul", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "web_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="PI Web ID",
        ),
        sa.Column(
            "konstanta", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["excel_id"],
            ["hl_ms_excel.id"],
            name="hl_ms_excel_variables_excel_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="hl_ms_excel_variables_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "auth_tr_role_resource",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("role_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("resource_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["auth_mr_resource.id"],
            name="auth_tr_role_resource_resource_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["auth_mr_role.id"],
            name="auth_tr_role_resource_role_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="auth_tr_role_resource_pkey"),
    )
    op.create_table(
        "auth_mr_resource",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("code", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="auth_mr_resource_pkey"),
    )
    op.create_table(
        "auth_mr_user",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("password", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("position", sa.VARCHAR(length=300), autoincrement=False, nullable=False),
        sa.Column("role_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"], ["auth_mr_role.id"], name="auth_mr_user_role_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="auth_mr_user_pkey"),
        sa.UniqueConstraint("email", name="auth_mr_user_email_key"),
        sa.UniqueConstraint("username", name="auth_mr_user_username_key"),
    )
    op.create_table(
        "hl_tr_data_detail_root_cause",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "data_detail_id",
            sa.UUID(),
            autoincrement=False,
            nullable=True,
            comment="Ref to hl_tr_data_detail",
        ),
        sa.Column(
            "cause_id",
            sa.UUID(),
            autoincrement=False,
            nullable=True,
            comment="Ref to hl_m_cause 1 to many",
        ),
        sa.Column(
            "is_repair", sa.BOOLEAN(), autoincrement=False, nullable=True, comment="1=ya, 0=tidak"
        ),
        sa.Column(
            "biaya",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
            comment="Besar Biaya yang dikeluarkan (input)",
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "variable_header_value",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
            comment="[{id: 9, nama: 'sdasdas asdasd', val: 1}]",
        ),
        sa.ForeignKeyConstraint(
            ["cause_id"],
            ["hl_ms_excel_variables_cause.id"],
            name="hl_tr_data_detail_root_cause_cause_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["data_detail_id"],
            ["hl_tr_data_detail.id"],
            name="hl_tr_data_detail_root_cause_data_detail_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="hl_tr_data_detail_root_cause_pkey"),
    )
    # ### end Alembic commands ###
